apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
spec:
  selector:
    matchLabels:
      app: mongodb
  serviceName: mongodb
  replicas: 2
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - name: mongodb
        image: mongo:latest
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: mongodb-data
          mountPath: /data/db
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom: 
            secretKeyRef:
              name: mongo-secrets
              key: MONGO_INITDB_ROOT_USERNAME
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongo-secrets
              key: MONGO_INITDB_ROOT_PASSWORD
        - name: MONGO_INITDB_DATABASE
          value: mydb
        - name: MONGODB_REPLICA_SET_NAME
          value: rs0
        - name: MONGODB_PORT
          value: "27017"
        - name: MONGODB_CLUSTER_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
      volumes:
      - name: mongodb-data
        persistentVolumeClaim:
          claimName: mongodb-pvc
  volumeClaimTemplates:
  - metadata:
      name: mongodb-pvc
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi
 

---
apiVersion: v1
kind: Service
metadata: 
  name: mongodp
spec:
  ports:
  - port: 27017
    targetPort: 80
    protocol: TCP
    name: http
    nodePort: 30001
  type: NodePort
  selector:
    app: mongodb